TITLE:
Haskell Tutorial, pt. 0: Prelude

BODY:

tl;dr: This aims to be a <i>practical</i> guide to Haskell. Above all, I want you to come away from this knowing how to make super cool stuff.

The problem with Haskell tutorials these days is that most of them will go over abstract code sample after abstract code sample. They'll say something like, look! 

<pre>
fold (+) (map (\x -> x + 1) [1, 2, 3]) 0
>> 9
</pre>

Isn't that amazing! Didn't you always want to add 1 to each element of an array, and then sum it?!

If you're anything like me, the answer is <i>no</i>. No, I really wasn't in the mood for adding 1 to each element of an array, let alone summing it afterwards. I can't think of why I'd want to do that in the first place.

Haskell (and FP) tutorials are just too abstract.

It's not their fault, though. Let's step back and see what the reason is.

The great thing about OOP is that it namespaces functions really well. So, if you ever want to find some string-related method, just look at the String object, and boom! There they are. Arrays? Yep, Array class. This is awesome for learning the language, because you have a place to start.

Functional programming languages, on the other hand, can feel filled with tons of random functions. This is pretty much the point of a functional language. I mean, it's in the name! FUNCTIONAL Language! What do you expect? Not-functions? That'd be some other paradigm.

And so when you try to learn a functional language, people will throw this massive amount of functions at you, because that's clearly the point! Right? 

And since they're so decontextualized, we may as well present them in their purest, most abstract state. 

And then somehow we've gotten into really bad examples like the first code sample that don't help people like me learn.

Even worse, this gives functional programming a bad rap, because people tend to think of it in terms of obscure mathematical functions.

But I'm here to change all of that! 

Now let's go make something cool with Haskell.

FOOTER:
What? What's a footer? This isn't a footer, is it?
